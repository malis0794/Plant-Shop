[{"/Users/ali/Documents/bootcamp/Plant-Shop/src/index.js":"1","/Users/ali/Documents/bootcamp/Plant-Shop/src/App.js":"2","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/auth.jsx":"3","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/products.jsx":"4","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/checkout.jsx":"5","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/common.jsx":"6","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/cart.jsx":"7","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/AuthLayout.jsx":"8","/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/home.jsx":"9","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/CommonLayout.jsx":"10","/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/auth.jsx":"11","/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/checkout.jsx":"12","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/RouteWrapper.jsx":"13","/Users/ali/Documents/bootcamp/Plant-Shop/src/hooks/useLocalStorage.js":"14","/Users/ali/Documents/bootcamp/Plant-Shop/src/constants/common.js":"15","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Footer.jsx":"16","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Product.jsx":"17","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Header.jsx":"18","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/core/form-controls/Input.jsx":"19","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/CartPreview.jsx":"20"},{"size":197,"mtime":1623833615000,"results":"21","hashOfConfig":"22"},{"size":1563,"mtime":1623833615000,"results":"23","hashOfConfig":"22"},{"size":1987,"mtime":1623833615000,"results":"24","hashOfConfig":"22"},{"size":1731,"mtime":1623833615000,"results":"25","hashOfConfig":"22"},{"size":1816,"mtime":1623833615000,"results":"26","hashOfConfig":"22"},{"size":1266,"mtime":1623833615000,"results":"27","hashOfConfig":"22"},{"size":2560,"mtime":1623833615000,"results":"28","hashOfConfig":"22"},{"size":548,"mtime":1638436295246,"results":"29","hashOfConfig":"22"},{"size":1135,"mtime":1623833615000,"results":"30","hashOfConfig":"22"},{"size":319,"mtime":1623833615000,"results":"31","hashOfConfig":"22"},{"size":2254,"mtime":1623833615000,"results":"32","hashOfConfig":"22"},{"size":9952,"mtime":1638436663311,"results":"33","hashOfConfig":"22"},{"size":783,"mtime":1623833615000,"results":"34","hashOfConfig":"22"},{"size":713,"mtime":1623833615000,"results":"35","hashOfConfig":"22"},{"size":134,"mtime":1623833615000,"results":"36","hashOfConfig":"22"},{"size":757,"mtime":1638436860520,"results":"37","hashOfConfig":"22"},{"size":1036,"mtime":1623833615000,"results":"38","hashOfConfig":"22"},{"size":3406,"mtime":1638436416969,"results":"39","hashOfConfig":"22"},{"size":806,"mtime":1623833615000,"results":"40","hashOfConfig":"22"},{"size":1986,"mtime":1638436653739,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"58qxtt",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/ali/Documents/bootcamp/Plant-Shop/src/index.js",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/App.js",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/auth.jsx",["91"],"import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/products.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/checkout.jsx",["92"],"import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nexport const CHECKOUT_STEPS = {\n  AUTH: \"auth\",\n  SHIPPING: \"shipping\",\n  PAYMENT: \"payment\"\n};\n\nconst initialState = {\n  step: CHECKOUT_STEPS.AUTH,\n  shippingAddress: null\n};\n\nexport const CheckoutStateContext = createContext();\nexport const CheckoutDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CHECKOUT_STEP\":\n      return {\n        ...state,\n        step: action.payload.step\n      };\n    case \"SET_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        shippingAddress: action.payload.shippingAddress\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CheckoutProvider = ({ children }) => {\n  const [checkoutState, setCheckoutState] = useLocalStorage(\"checkout\", null);\n  const persistedCheckoutState = {\n    ...initialState,\n    shippingAddress: checkoutState || {}\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCheckoutState);\n\n  useEffect(() => {\n    setCheckoutState(state.shippingAddress);\n  }, [state.shippingAddress]);\n  return (\n    <CheckoutDispatchContext.Provider value={dispatch}>\n      <CheckoutStateContext.Provider value={state}>\n        {children}\n      </CheckoutStateContext.Provider>\n    </CheckoutDispatchContext.Provider>\n  );\n};\n\nexport const setCheckoutStep = (dispatch, step) => {\n  return dispatch({\n    type: \"SET_CHECKOUT_STEP\",\n    payload: {\n      step\n    }\n  });\n};\n\nexport const saveShippingAddress = (dispatch, shippingAddress) => {\n  dispatch({\n    type: \"SET_SHIPPING_ADDRESS\",\n    payload: {\n      shippingAddress\n    }\n  });\n  return setCheckoutStep(dispatch, CHECKOUT_STEPS.PAYMENT);\n};\n\nexport default CheckoutProvider;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/common.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/cart.jsx",["93","94"],"import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/AuthLayout.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/home.jsx",["95"],"import React, { useEffect, useContext } from \"react\";\nimport ProductCard from \"components/Product\";\nimport {\n  ProductsStateContext,\n  ProductsDispatchContext,\n  getProducts\n} from \"contexts/products\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Home = () => {\n  const { products, isLoading, isLoaded } = useContext(ProductsStateContext);\n  const { searchKeyword } = useContext(CommonStateContext);\n  const dispatch = useContext(ProductsDispatchContext);\n\n  const productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n  useEffect(() => {\n    getProducts(dispatch);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"products-wrapper\">\n      <div className=\"products\">\n        {isLoaded &&\n          productsList.map((data) => {\n            return <ProductCard key={data.id} data={data} />;\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/CommonLayout.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/auth.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/checkout.jsx",["96","97"],"import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CheckoutStateContext,\n  CheckoutDispatchContext,\n  CHECKOUT_STEPS,\n  setCheckoutStep,\n  saveShippingAddress\n} from \"contexts/checkout\";\nimport { CartStateContext } from \"contexts/cart\";\nimport { AuthStateContext, AuthDispatchContext, signOut } from \"contexts/auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport { phoneRegExp } from \"constants/common\";\n\nconst AddressSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  phoneNumber: Yup.string()\n    .required(\"Phone Number is required\")\n    .matches(phoneRegExp, \"Phone Number is not a valid 10 digit number\")\n    .min(10, \"Phone Number is too short\")\n    .max(10, \"Phone Number is too long\"),\n  addressLine: Yup.string().required(\"Door No. & Street is required!\"),\n  city: Yup.string().required(\"City is required!\"),\n  state: Yup.string().required(\"State is required!\"),\n  code: Yup.string().required(\"ZIP/Postal code is required!\"),\n  country: Yup.string().required(\"Country is required!\")\n});\n\nconst LoginStep = () => {\n  const history = useHistory();\n  const { user, isLoggedIn } = useContext(AuthStateContext);\n  const authDispatch = useContext(AuthDispatchContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleContinueShopping = () => {\n    history.push(\"/\");\n  };\n  const handleLoginAsDiffUser = () => {\n    signOut(authDispatch);\n    history.push(\"/auth\");\n  };\n  const handleGotoLogin = () => {\n    history.push(\"/auth\");\n  };\n  const handleProceed = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Sign In now!</h2>\n      <div className=\"auth-message\">\n        {isLoggedIn ? (\n          <>\n            <p>\n              Logged in as <span>{user.username}</span>\n            </p>\n            <button onClick={() => handleLoginAsDiffUser()}>\n              Login as Different User\n            </button>\n          </>\n        ) : (\n          <>\n            <p>Please login to continue.</p>\n            <button onClick={() => handleGotoLogin()}>Login</button>\n          </>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"outline\" onClick={() => handleContinueShopping()}>\n          <i className=\"rsc-icon-arrow_back\" /> Continue Shopping\n        </button>\n        <button disabled={!isLoggedIn} onClick={() => handleProceed()}>\n          Proceed\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AddressStep = () => {\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n\n  const handleBackToLogin = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.AUTH);\n  };\n  const handleSaveAddress = (addressData) => {\n    saveShippingAddress(checkoutDispatch, addressData);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Shipping Address</h2>\n      <Formik\n        initialValues={{\n          fullName: \"John Doe\",\n          phoneNumber: \"5552229876\",\n          addressLine: \"L1, Palm Residency\",\n          city: \"Kingston\",\n          state: \"New York\",\n          code: \"12401\",\n          country: \"United States\"\n        }}\n        validationSchema={AddressSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const addressData = { ...values };\n            resetForm();\n            handleSaveAddress(addressData);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"field-group\">\n              <Field\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Full Name\"\n                component={Input}\n              />\n              <Field\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"Phone Number\"\n                component={Input}\n              />\n            </div>\n            <Field\n              name=\"addressLine\"\n              type=\"text\"\n              placeholder=\"Door No. & Street\"\n              component={Input}\n            />\n            <div className=\"field-group\">\n              <Field\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                component={Input}\n              />\n              <Field\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"State\"\n                component={Input}\n              />\n            </div>\n            <div className=\"field-group\">\n              <Field\n                name=\"code\"\n                type=\"text\"\n                placeholder=\"ZIP/Postal Code\"\n                component={Input}\n              />\n              <Field\n                name=\"country\"\n                type=\"text\"\n                placeholder=\"Country\"\n                component={Input}\n              />\n            </div>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"outline\"\n                onClick={() => handleBackToLogin()}\n              >\n                <i className=\"rsc-icon-arrow_back\" /> Login in as Different User\n              </button>\n              <button type=\"submit\">\n                Save Address\n                <i className=\"rsc-icon-arrow_forward\" />\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst PaymentStep = () => {\n  const { shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleBackToAddress = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  const handlePayment = () => {};\n  return (\n    <div className=\"detail-container\">\n      <h2>Payment</h2>\n      {/* <div>\n        <pre>{JSON.stringify(shippingAddress, null, 0)}</pre>\n      </div> */}\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"outline\"\n          onClick={() => handleBackToAddress()}\n        >\n          <i className=\"rsc-icon-arrow_back\" /> Back to Shipping Details\n        </button>\n        <button disabled={!shippingAddress} onClick={() => handlePayment()}>\n          Save Address\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const { items = [] } = useContext(CartStateContext);\n  const { isLoggedIn } = useContext(AuthStateContext);\n  const { step, shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const totalItems = items.length;\n\n  const handleClickTimeline = (nextStep) => {\n    setCheckoutStep(checkoutDispatch, nextStep);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"container\">\n        <div className=\"order-details\">\n          <ul className=\"timeline\">\n            <li\n              className={classNames({\n                done: isLoggedIn,\n                active: step === CHECKOUT_STEPS.AUTH\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.AUTH)}\n            >\n              <h2>Sign In</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: shippingAddress !== null,\n                active: step === CHECKOUT_STEPS.SHIPPING\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.SHIPPING)}\n            >\n              <h2>Shipping</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: false,\n                active: step === CHECKOUT_STEPS.PAYMENT\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.PAYMENT)}\n            >\n              <h2>Payment</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n          </ul>\n          {step === CHECKOUT_STEPS.AUTH && <LoginStep />}\n          {step === CHECKOUT_STEPS.SHIPPING && <AddressStep />}\n          {step === CHECKOUT_STEPS.PAYMENT && <PaymentStep />}\n        </div>\n        <div className=\"order-summary\">\n          <h2>\n            Summary\n            <span>{` (${totalItems}) Items`}</span>\n          </h2>\n          <ul className=\"cart-items\">\n            {items.map((product) => {\n              return (\n                <li className=\"cart-item\" key={product.name}>\n                  <img className=\"product-image\" src={product.image} />\n                  <div className=\"product-info\">\n                    <p className=\"product-name\">{product.name}</p>\n                    <p className=\"product-price\">{product.price}</p>\n                  </div>\n                  <div className=\"product-total\">\n                    <p className=\"quantity\">\n                      {`${product.quantity} ${\n                        product.quantity > 1 ? \"No.\" : \"No.\"\n                      }`}\n                    </p>\n                    <p className=\"amount\">{product.quantity * product.price}</p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          <ul className=\"total-breakup\">\n            <li>\n              <p>Subtotal</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Tax</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Shipping</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <h2>Total</h2>\n              <h2>5000</h2>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/layouts/RouteWrapper.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/hooks/useLocalStorage.js",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/constants/common.js",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Footer.jsx",["98","99","100","101"],"import React from \"react\";\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer>\n      <p className=\"footer-links\">\n        <a\n          href=\"https://github.com/malis0794\"\n          target=\"_blank\"\n        >\n          View Source on Github\n        </a>\n        <span> / </span>\n        <a href=\"\" target=\"_blank\">\n          Need any help?\n        </a>\n        <span> / </span>\n        <a href=\"\" target=\"_blank\">\n          Say Hi on Twitter\n        </a>\n        <span> / </span>\n        <a href=\"\" target=\"_blank\">\n          Read My Blog\n        </a>\n      </p>\n      <p>\n        &copy; {currentYear} <strong>Plantee</strong> - High Quality Plants & Coffee\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Product.jsx",["102","103"],"import React, { useState, useContext } from \"react\";\nimport { CartDispatchContext, addToCart } from \"contexts/cart\";\n\nconst ProductCard = ({ data }) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const { image, name, price, id, stock } = data;\n\n  const handleAddToCart = () => {\n    const product = { ...data, quantity: 1 };\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product-image\">\n        <img src={image} alt={name} />\n      </div>\n      <h4 className=\"product-name\">{name}</h4>\n      <p className=\"product-price\">{price}</p>\n      <div className=\"product-action\">\n        <button\n          className={!isAdded ? \"\" : \"added\"}\n          type=\"button\"\n          onClick={handleAddToCart}\n        >\n          {!isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/Header.jsx",["104","105","106","107","108"],"import React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CartStateContext,\n  CartDispatchContext,\n  toggleCartPopup\n} from \"contexts/cart\";\nimport { CommonDispatchContext, setSearchKeyword } from \"contexts/common\";\nimport CartPreview from \"components/CartPreview\";\n\nconst Header = (props) => {\n  const { items: cartItems, isCartOpen } = useContext(CartStateContext);\n  const commonDispatch = useContext(CommonDispatchContext);\n  const cartDispatch = useContext(CartDispatchContext);\n  const cartQuantity = cartItems.length;\n  const cartTotal = cartItems\n    .map((item) => item.price * item.quantity)\n    .reduce((prev, current) => prev + current, 0);\n\n  const handleSearchInput = (event) => {\n    return setSearchKeyword(commonDispatch, event.target.value);\n  };\n\n  const handleCartButton = (event) => {\n    event.preventDefault();\n    return toggleCartPopup(cartDispatch);\n  };\n\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"brand\">\n          <Link to=\"/\">\n            <h1>Plantee</h1>\n          </Link>\n        </div>\n\n        <div className=\"search\">\n          <a\n            className=\"mobile-search\"\n            href=\"#\"\n            // onClick={this.handleMobileSearch.bind(this)}\n          >\n            <img\n              src=\"https://res.cloudinary.com/sivadass/image/upload/v1494756966/icons/search-green.png\"\n              alt=\"search\"\n            />\n          </a>\n          <form action=\"#\" method=\"get\" className=\"search-form\">\n            <a\n              className=\"back-button\"\n              href=\"#\"\n              // onClick={this.handleSearchNav.bind(this)}\n            >\n              <img\n                src=\"https://res.cloudinary.com/sivadass/image/upload/v1494756030/icons/back.png\"\n                alt=\"back\"\n              />\n            </a>\n            <input\n              type=\"search\"\n              placeholder=\"Search for Plants and Coffee\"\n              className=\"search-keyword\"\n              onChange={handleSearchInput}\n            />\n            <button\n              className=\"search-button\"\n              type=\"submit\"\n              // onClick={this.handleSubmit.bind(this)}\n            />\n          </form>\n        </div>\n\n        <div className=\"cart\">\n          <div className=\"cart-info\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>No. of items</td>\n                  <td>:</td>\n                  <td>\n                    <strong>{cartQuantity}</strong>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Sub Total</td>\n                  <td>:</td>\n                  <td>\n                    <strong>{cartTotal}</strong>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <a className=\"cart-icon\" href=\"#\" onClick={handleCartButton}>\n            <img\n              className={props.cartBounce ? \"tada\" : \" \"}\n              src=\"https://res.cloudinary.com/sivadass/image/upload/v1493548928/icons/bag.png\"\n              alt=\"Cart\"\n            />\n            {cartQuantity ? (\n              <span className=\"cart-count\">{cartQuantity}</span>\n            ) : (\n              \"\"\n            )}\n          </a>\n          <CartPreview />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ali/Documents/bootcamp/Plant-Shop/src/components/core/form-controls/Input.jsx",[],"/Users/ali/Documents/bootcamp/Plant-Shop/src/components/CartPreview.jsx",["109"],"import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CartStateContext,\n  CartDispatchContext,\n  removeFromCart,\n  toggleCartPopup\n} from \"contexts/cart\";\n\nconst CartPreview = () => {\n  const { items, isCartOpen } = useContext(CartStateContext);\n  const dispatch = useContext(CartDispatchContext);\n  const history = useHistory();\n\n  const handleRemove = (productId) => {\n    return removeFromCart(dispatch, productId);\n  };\n\n  const handleProceedCheckout = () => {\n    toggleCartPopup(dispatch);\n    history.push(\"/checkout\");\n  };\n\n  return (\n    <div className={classNames(\"cart-preview\", { active: isCartOpen })}>\n      <ul className=\"cart-items\">\n        {items.map((product) => {\n          return (\n            <li className=\"cart-item\" key={product.name}>\n              <img className=\"product-image\" src={product.image} />\n              <div className=\"product-info\">\n                <p className=\"product-name\">{product.name}</p>\n                <p className=\"product-price\">{product.price}</p>\n              </div>\n              <div className=\"product-total\">\n                <p className=\"quantity\">\n                  {`${product.quantity} ${\n                    product.quantity > 1 ? \"No.\" : \"No.\"\n                  }`}\n                </p>\n                <p className=\"amount\">{product.quantity * product.price}</p>\n              </div>\n              <button\n                className=\"product-remove\"\n                onClick={() => handleRemove(product.id)}\n              >\n                ×\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"action-block\">\n        <button\n          type=\"button\"\n          className={classNames({ disabled: items && items.length === 0 })}\n          onClick={handleProceedCheckout}\n        >\n          PROCEED TO CHECKOUT\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CartPreview;\n",{"ruleId":"110","severity":1,"message":"111","line":75,"column":6,"nodeType":"112","endLine":75,"endColumn":24,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":45,"column":6,"nodeType":"112","endLine":45,"endColumn":29,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":100,"column":6,"nodeType":"112","endLine":100,"endColumn":35,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":100,"column":7,"nodeType":"119","endLine":100,"endColumn":34},{"ruleId":"110","severity":1,"message":"120","line":26,"column":6,"nodeType":"112","endLine":26,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":15,"column":8,"nodeType":"124","messageId":"125","endLine":15,"endColumn":12},{"ruleId":"126","severity":1,"message":"127","line":277,"column":19,"nodeType":"128","endLine":277,"endColumn":72},{"ruleId":"129","severity":1,"message":"130","line":8,"column":9,"nodeType":"128","messageId":"131","endLine":11,"endColumn":10,"fix":"132"},{"ruleId":"133","severity":1,"message":"134","line":15,"column":9,"nodeType":"128","endLine":15,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":19,"column":9,"nodeType":"128","endLine":19,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":23,"column":9,"nodeType":"128","endLine":23,"endColumn":36},{"ruleId":"122","severity":1,"message":"135","line":7,"column":31,"nodeType":"124","messageId":"125","endLine":7,"endColumn":33},{"ruleId":"122","severity":1,"message":"136","line":7,"column":35,"nodeType":"124","messageId":"125","endLine":7,"endColumn":40},{"ruleId":"122","severity":1,"message":"137","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"138","line":13,"column":29,"nodeType":"124","messageId":"125","endLine":13,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":40,"column":11,"nodeType":"128","endLine":44,"endColumn":12},{"ruleId":"133","severity":1,"message":"134","line":51,"column":13,"nodeType":"128","endLine":55,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":96,"column":11,"nodeType":"128","endLine":96,"endColumn":72},{"ruleId":"126","severity":1,"message":"127","line":31,"column":15,"nodeType":"128","endLine":31,"endColumn":68},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setPersistedUser' and 'state.user'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'setCheckoutState'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'setPersistedCartItems' and 'state.items'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],"no-unused-vars","'_get' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"143","text":"144"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'stock' is assigned a value but never used.","'classNames' is defined but never used.","'isCartOpen' is assigned a value but never used.",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},[240,240]," rel=\"noreferrer\"","Update the dependencies array to be: [setPersistedUser, state.isLoggedIn, state.user]",{"range":"153","text":"154"},"Update the dependencies array to be: [setCheckoutState, state.shippingAddress]",{"range":"155","text":"156"},"Update the dependencies array to be: [setPersistedCartItems, state.items]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatch]",{"range":"159","text":"160"},[1726,1744],"[setPersistedUser, state.isLoggedIn, state.user]",[1157,1180],"[setCheckoutState, state.shippingAddress]",[2289,2318],"[setPersistedCartItems, state.items]",[731,733],"[dispatch]"]