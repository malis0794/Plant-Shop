{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/common.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\nexport const CommonStateContext = /*#__PURE__*/createContext();\nexport const CommonDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return { ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n\n    case \"SET_SEARCH_KEYWORD\":\n      return { ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(CommonDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CommonStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommonProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CommonProvider;\nexport const toggleSearchBar = dispatch => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\nexport default CommonProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonProvider\");","map":{"version":3,"sources":["/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/common.jsx"],"names":["React","useReducer","createContext","initialState","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","reducer","state","action","type","payload","Error","CommonProvider","children","dispatch","toggleSearchBar","setSearchKeyword"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAKA,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,EAAxC;AACP,OAAO,MAAMK,qBAAqB,gBAAGL,aAAa,EAA3C;;AAEP,MAAMM,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,eAAe,EAAE,CAACK,KAAK,CAACL;AAFnB,OAAP;;AAIF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELJ,QAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAFzB,OAAP;;AAIF;AACE,YAAM,IAAIQ,KAAJ,CAAW,mBAAkBH,MAAM,CAACC,IAAK,EAAzC,CAAN;AAZJ;AAcD,CAfD;;AAiBA,MAAMG,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACvC,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBf,UAAU,CAACO,OAAD,EAAUL,YAAV,CAApC;AACA,sBACE,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEa,QAAvC;AAAA,2BACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAEP,KAApC;AAAA,gBACGM;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;GAAMD,c;;KAAAA,c;AAWN,OAAO,MAAMG,eAAe,GAAID,QAAD,IAAc;AAC3C,SAAOA,QAAQ,CAAC;AACdL,IAAAA,IAAI,EAAE;AADQ,GAAD,CAAf;AAGD,CAJM;AAMP,OAAO,MAAMO,gBAAgB,GAAG,CAACF,QAAD,EAAWX,aAAX,KAA6B;AAC3D,SAAOW,QAAQ,CAAC;AACdL,IAAAA,IAAI,EAAE,oBADQ;AAEdC,IAAAA,OAAO,EAAE;AACPP,MAAAA,aAAa,EAAEA;AADR;AAFK,GAAD,CAAf;AAMD,CAPM;AASP,eAAeS,cAAf","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\n\nexport const CommonStateContext = createContext();\nexport const CommonDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return {\n        ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n    case \"SET_SEARCH_KEYWORD\":\n      return {\n        ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CommonDispatchContext.Provider value={dispatch}>\n      <CommonStateContext.Provider value={state}>\n        {children}\n      </CommonStateContext.Provider>\n    </CommonDispatchContext.Provider>\n  );\n};\n\nexport const toggleSearchBar = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\n\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\n\nexport default CommonProvider;\n"]},"metadata":{},"sourceType":"module"}