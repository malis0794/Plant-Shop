{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\nexport const CartStateContext = /*#__PURE__*/createContext();\nexport const CartDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return { ...state,\n        isCartOpen: !state.isCartOpen\n      };\n\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map(item => item.id).includes(id);\n      let cartItems = null;\n\n      if (isOld) {\n        const items = state.items.map(item => {\n          if (item.id === id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n\n      return { ...state,\n        items: cartItems\n      };\n\n    case \"REMOVE_FROM_CART\":\n      return { ...state,\n        items: state.items.filter(item => item.id !== action.payload.cartItemId)\n      };\n\n    case \"CLEAR_CART\":\n      return { ...state,\n        ...initialState\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = dispatch => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\nexport const clearCart = dispatch => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\"cartItems\", []);\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"XP8qSprmRCPk8NXN1Z6i025ETsU=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/cart.jsx"],"names":["React","useReducer","createContext","useEffect","useLocalStorage","initialState","isCartOpen","items","CartStateContext","CartDispatchContext","reducer","state","action","type","id","payload","cartItem","isOld","map","item","includes","cartItems","quantity","filter","cartItemId","Error","toggleCartPopup","dispatch","addToCart","removeFromCart","clearCart","CartProvider","children","persistedCartItems","setPersistedCartItems","persistedCartState","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}