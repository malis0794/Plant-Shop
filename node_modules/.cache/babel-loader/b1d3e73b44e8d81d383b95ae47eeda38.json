{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"Mobile Number or Email Address is required!\")\n});\n\nconst AuthPage = () => {\n  _s();\n\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  console.log(\"location => \", location);\n\n  const goToForgotPassword = e => {\n    e.preventDefault();\n  };\n\n  const goToRegister = e => {\n    e.preventDefault();\n  };\n\n  const signInSuccess = userData => {\n    signIn(authDispatch, userData);\n\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const userData = { ...values\n        };\n        resetForm();\n        signInSuccess(userData);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    children: () => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Mobile Number or Email Address\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          onClick: goToForgotPassword,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-button block\",\n        onClick: () => {},\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New here?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          onClick: goToRegister,\n          children: \"Sign Up Now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthPage, \"fzLsMr/qaOBxT/DD5khJ4kT5KPQ=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = AuthPage;\nexport default AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["/Users/ali/Documents/bootcamp/Plant-Shop/src/pages/auth.jsx"],"names":["React","useContext","Formik","Form","Field","useHistory","useLocation","Yup","_get","AuthDispatchContext","signIn","Input","LoginSchema","object","shape","password","string","required","username","AuthPage","authDispatch","history","location","fromUrl","console","log","goToForgotPassword","e","preventDefault","goToRegister","signInSuccess","userData","push","values","resetForm","err","error"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"Mobile Number or Email Address is required!\")\n});\n\nconst AuthPage = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const fromUrl = _get(location, \"state.from.pathname\");\n  console.log(\"location => \", location);\n  const goToForgotPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const goToRegister = (e) => {\n    e.preventDefault();\n  };\n\n  const signInSuccess = (userData) => {\n    signIn(authDispatch, userData);\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = { ...values };\n          resetForm();\n          signInSuccess(userData);\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Mobile Number or Email Address\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <p>\n            <a href=\"/#\" onClick={goToForgotPassword}>\n              Forgot Password?\n            </a>\n          </p>\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Login\n          </button>\n\n          <p>\n            New here?{\" \"}\n            <a href=\"/#\" onClick={goToRegister}>\n              Sign Up Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}