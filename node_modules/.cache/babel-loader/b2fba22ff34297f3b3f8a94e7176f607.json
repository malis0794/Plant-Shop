{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/products.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\nexport const ProductsStateContext = /*#__PURE__*/createContext();\nexport const ProductsDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return { ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n\n    case \"GET_PRODUCTS_SUCCESS\":\n      return { ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n\n    case \"GET_PRODUCTS_FAILURE\":\n      return { ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ProductsDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(ProductsStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductsProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProductsProvider;\nexport const getProducts = dispatch => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url = \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios.get(url).then(response => {\n    dispatch({\n      type: \"GET_PRODUCTS_SUCCESS\",\n      payload: {\n        products: response.data\n      }\n    });\n  }).catch(error => {\n    console.error(error);\n    dispatch({\n      type: \"GET_PRODUCTS_FAILURE\"\n    });\n  });\n};\nexport default ProductsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"sources":["/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/products.jsx"],"names":["React","useReducer","createContext","axios","initialState","products","isLoading","isLoaded","ProductsStateContext","ProductsDispatchContext","reducer","state","action","type","payload","Error","ProductsProvider","children","dispatch","getProducts","url","get","then","response","data","catch","error","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;AAMA,OAAO,MAAMC,oBAAoB,gBAAGN,aAAa,EAA1C;AACP,OAAO,MAAMO,uBAAuB,gBAAGP,aAAa,EAA7C;;AAEP,MAAMQ,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELL,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILF,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAJpB,OAAP;;AAMF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELN,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,QAAQ,EAAE;AAJL,OAAP;;AAMF;AACE,YAAM,IAAIQ,KAAJ,CAAW,mBAAkBH,MAAM,CAACC,IAAK,EAAzC,CAAN;AAtBJ;AAwBD,CAzBD;;AA2BA,MAAMG,gBAAgB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACzC,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBjB,UAAU,CAACS,OAAD,EAAUN,YAAV,CAApC;AACA,sBACE,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEc,QAAzC;AAAA,2BACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAEP,KAAtC;AAAA,gBACGM;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;GAAMD,gB;;KAAAA,gB;AAWN,OAAO,MAAMG,WAAW,GAAID,QAAD,IAAc;AACvCA,EAAAA,QAAQ,CAAC;AACPL,IAAAA,IAAI,EAAE;AADC,GAAD,CAAR;AAGA,QAAMO,GAAG,GACP,+EADF;AAEAjB,EAAAA,KAAK,CACFkB,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBL,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,sBADC;AAEPC,MAAAA,OAAO,EAAE;AACPT,QAAAA,QAAQ,EAAEkB,QAAQ,CAACC;AADZ;AAFF,KAAD,CAAR;AAMD,GATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAR,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAfH;AAgBD,CAtBM;AAwBP,eAAeG,gBAAf","sourcesContent":["import React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\n\nexport const ProductsStateContext = createContext();\nexport const ProductsDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n    case \"GET_PRODUCTS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n    case \"GET_PRODUCTS_FAILURE\":\n      return {\n        ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ProductsDispatchContext.Provider value={dispatch}>\n      <ProductsStateContext.Provider value={state}>\n        {children}\n      </ProductsStateContext.Provider>\n    </ProductsDispatchContext.Provider>\n  );\n};\n\nexport const getProducts = (dispatch) => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url =\n    \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios\n    .get(url)\n    .then((response) => {\n      dispatch({\n        type: \"GET_PRODUCTS_SUCCESS\",\n        payload: {\n          products: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.error(error);\n      dispatch({\n        type: \"GET_PRODUCTS_FAILURE\"\n      });\n    });\n};\n\nexport default ProductsProvider;\n"]},"metadata":{},"sourceType":"module"}