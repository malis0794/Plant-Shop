{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\nexport const AuthStateContext = /*#__PURE__*/createContext();\nexport const AuthDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return { ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n\n    case \"LOGOUT_SUCCESS\":\n      return { ...state,\n        ...initialState\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\nexport const signOut = dispatch => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = { ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(AuthDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(AuthStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"UTfNO/Z2Y5Hw4HohdyLfD3Ct2yY=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/ali/Documents/bootcamp/Plant-Shop/src/contexts/auth.jsx"],"names":["React","useReducer","createContext","useEffect","_get","useLocalStorage","initialState","isLoggedIn","user","isLoggingIn","AuthStateContext","AuthDispatchContext","reducer","state","action","type","payload","Error","signIn","dispatch","userData","localStorage","setItem","JSON","stringify","signOut","clear","AuthProvider","children","persistedUser","setPersistedUser","persistedUserState","length"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}